# This is a basic workflow to help you get started with Actions

name: Deploy the whole documentation to production

on:
  push:
    branches: [gha-ci]
  workflow_dispatch:

jobs:
  prepare-matrix:
    name: Prepare matrix by getting the repo names from repositories.yml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install python python3-pip
          pip3 install yq
        shell: bash
      - name: Get repo names
        id: set-matrix
        # run: echo "::set-output name=matrix::[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]"
        run: echo "::set-output name=repo::$(cat .repos/repositories.yml | yq -c '[.[]]' | sed 's/"/\\"/g'"
        # run: cat .repos/repositories.yml | yq -c '[.[].repo_name]' | sed 's/"/\\"/g' | sed 's/,/, /g'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.repo }}

  # deploy_framework:
  #   name: Deploy framework
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Say something
  #       run: echo Deploying the framework...
  deploy_child_repo:
    name: Deploy child repo ${{ matrix.repo.repo_name }}-${{ matrix.repo.doc_version }}
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:
      # - uses: actions/checkout@v2
      - name: Run a one-line script
        run: echo "Running in matrix ${{ matrix.repo.repo_name }}-${{ matrix.repo.doc_version }}"
