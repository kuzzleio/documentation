name: Deploy docs for repo
description: Deploys the docs of a given repository.

inputs:
  repo_name:
    description: The name of the repository to deploy
    required: true
  repo_branch:
    description: The branch of the repo to deploy
    required: true
  repo_version:
    description: The version of the repo to deploy
    required: true
  repo_deploy_path:
    description: The path in the destination bucket to deploy the built documentation to
    required: true
  NO_INVALIDATION:
    description: If set to true, the Cloudfront invalidation will not be triggered
    required: false
    default: false
  AWS_ACCESS_KEY_ID:
    description: AWS Access key ID
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: AWS secret key
    required: true
  S3_BUCKET:
    description: S3 bucket name
    required: true
  CLOUDFRONT_ID:
    description: Cloudfront distribution ID
    required: true
  REGION:
    description: AWS default region
    required: true

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      run: npm i
      shell: bash

    - name: Checks kuzdoc version
      run: npx kuzdoc --version
      shell: bash

    - name: Installs the repo
      shell: bash
      run: npx kuzdoc install --repo=${{ inputs.repo_name }}-${{ inputs.repo_version }} --repoBranch=${{ inputs.repo_branch }}

    - name: Builds and deploys the repo
      if: ${{ inputs.NO_INVALIDATION == 'true' }}
      run: npx kuzdoc build-and-deploy --repo=${{ inputs.repo_name }}-${{ inputs.repo_version }} --s3Bucket=${{ inputs.S3_BUCKET }} --cloudfrontId=${{ inputs.CLOUDFRONT_ID }} --noInvalidation
      env:
        AWS_DEFAULT_REGION: ${{ inputs.REGION }}
        AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        NODE_OPTIONS: --max-old-space-size=4096
      shell: bash

    - name: Builds and deploys the repo
      if: ${{ inputs.NO_INVALIDATION == 'false' }}
      run: npx kuzdoc build-and-deploy --repo=${{ inputs.repo_name }}-${{ inputs.repo_version }} --s3Bucket=${{ inputs.S3_BUCKET }} --cloudfrontId=${{ inputs.CLOUDFRONT_ID }}
      env:
        AWS_DEFAULT_REGION: ${{ inputs.REGION }}
        AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        NODE_OPTIONS: --max-old-space-size=4096
      shell: bash
